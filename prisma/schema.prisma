// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Meetings {
  id        String     @id @default(cuid())
  type      String?
  title     String
  body      String
  author    User?      @relation(fields: [userId], references: [id])
  createdAt DateTime   @default(now())
  userId    String
  image     String?
  Comments  Comments[]
  Likes     Likes[]
}

model Comments {
  id        String    @id @default(cuid())
  meeting   Meetings? @relation(fields: [meetingId], references: [id])
  mural     Mural?    @relation(fields: [muralId], references: [id])
  author    User      @relation(fields: [userId], references: [id])
  content   String
  createdAt DateTime  @default(now())
  meetingId String?
  userId    String
  muralId   String?
}

model Likes {
  id        String    @id @default(cuid())
  meeting   Meetings? @relation(fields: [meetingId], references: [id])
  mural     Mural?    @relation(fields: [muralId], references: [id])
  userId    User      @relation(fields: [author], references: [id])
  createdAt DateTime  @default(now())
  meetingId String?
  author    String
  muralId   String?
}

model Mural {
  id        String     @id @default(cuid())
  body      String
  author    User       @relation(fields: [userId], references: [id])
  createdAt DateTime   @default(now())
  userId    String
  image     String?
  comments  Comments[]
  likes     Likes[]
}

model User {
  id                       String     @id @default(cuid())
  name                     String
  email                    String     @unique
  password                 String
  token                    String?
  emailConfirmationToken   String?    @unique
  emailConfirmationExpires DateTime?
  emailConfirmed           Boolean    @default(false)
  forum                    Meetings[]
  Comments                 Comments[]
  likes                    Likes[]

  sentRequests     Friendship[] @relation(name: "Requester")
  receivedRequests Friendship[] @relation(name: "Addressed")
  mural            Mural[]
  sentMessages     Message[]    @relation(name: "Sender")
  receivedMessages Message[]    @relation(name: "Recipient")
}

model Friendship {
  id          String   @id @default(cuid())
  requester   User     @relation(name: "Requester", fields: [requesterId], references: [id])
  addressed   User     @relation(name: "Addressed", fields: [addressedId], references: [id])
  status      String
  createdAt   DateTime @default(now())
  requesterId String
  addressedId String
}

//i need to implement this system
model Visitor {
  id   String @id @default(cuid())
  name String
}

model Message {
  id          String   @id @default(cuid())
  content     String
  sender      User     @relation(fields: [senderId], references: [id], name: "Sender")
  recipient   User     @relation(fields: [recipientId], references: [id], name: "Recipient")
  createdAt   DateTime @default(now())
  senderId    String
  recipientId String
}

generator erd {
  provider = "prisma-erd-generator"
}
